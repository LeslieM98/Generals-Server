/*
 * This file is generated by jOOQ.
 */
package me.leslie.generals.server.persistence.jooq.tables.records;


import me.leslie.generals.core.entity.interfaces.ITroop;
import me.leslie.generals.server.persistence.jooq.tables.Troop;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.2"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TroopRecord extends UpdatableRecordImpl<TroopRecord> implements Record13<Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double>, ITroop {

    private static final long serialVersionUID = 1896456856;

    /**
     * Setter for <code>TROOP.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TROOP.ID</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TROOP.CURRENT_HEALTH</code>.
     */
    public void setCurrentHealth(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>TROOP.CURRENT_HEALTH</code>.
     */
    @Override
    public Integer getCurrentHealth() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TROOP.MAX_HEALTH</code>.
     */
    public void setMaxHealth(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>TROOP.MAX_HEALTH</code>.
     */
    @Override
    public Integer getMaxHealth() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TROOP.POS_X</code>.
     */
    public void setPosX(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>TROOP.POS_X</code>.
     */
    @Override
    public Double getPosX() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>TROOP.POS_Y</code>.
     */
    public void setPosY(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>TROOP.POS_Y</code>.
     */
    @Override
    public Double getPosY() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>TROOP.NORMAL_SPEED</code>.
     */
    public void setNormalSpeed(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>TROOP.NORMAL_SPEED</code>.
     */
    @Override
    public Double getNormalSpeed() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>TROOP.STREET_SPEED</code>.
     */
    public void setStreetSpeed(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>TROOP.STREET_SPEED</code>.
     */
    @Override
    public Double getStreetSpeed() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>TROOP.DIFFICULT_TERRAIN_SPEED</code>.
     */
    public void setDifficultTerrainSpeed(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>TROOP.DIFFICULT_TERRAIN_SPEED</code>.
     */
    @Override
    public Double getDifficultTerrainSpeed() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>TROOP.CLOSE_COMBAT_RANGE</code>.
     */
    public void setCloseCombatRange(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>TROOP.CLOSE_COMBAT_RANGE</code>.
     */
    @Override
    public Double getCloseCombatRange() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>TROOP.RANGED_COMBAT_RANGE</code>.
     */
    public void setRangedCombatRange(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>TROOP.RANGED_COMBAT_RANGE</code>.
     */
    @Override
    public Double getRangedCombatRange() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>TROOP.NORMAL_VIEW_DISTANCE</code>.
     */
    public void setNormalViewDistance(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>TROOP.NORMAL_VIEW_DISTANCE</code>.
     */
    @Override
    public Double getNormalViewDistance() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>TROOP.DISADVANTAGED_VIEW_DISTANCE</code>.
     */
    public void setDisadvantagedViewDistance(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>TROOP.DISADVANTAGED_VIEW_DISTANCE</code>.
     */
    @Override
    public Double getDisadvantagedViewDistance() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>TROOP.ADVANTAGED_VIEW_DISTANCE</code>.
     */
    public void setAdvantagedViewDistance(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>TROOP.ADVANTAGED_VIEW_DISTANCE</code>.
     */
    @Override
    public Double getAdvantagedViewDistance() {
        return (Double) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, Integer, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Troop.TROOP.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Troop.TROOP.CURRENT_HEALTH;
    }

    @Override
    public Field<Integer> field3() {
        return Troop.TROOP.MAX_HEALTH;
    }

    @Override
    public Field<Double> field4() {
        return Troop.TROOP.POS_X;
    }

    @Override
    public Field<Double> field5() {
        return Troop.TROOP.POS_Y;
    }

    @Override
    public Field<Double> field6() {
        return Troop.TROOP.NORMAL_SPEED;
    }

    @Override
    public Field<Double> field7() {
        return Troop.TROOP.STREET_SPEED;
    }

    @Override
    public Field<Double> field8() {
        return Troop.TROOP.DIFFICULT_TERRAIN_SPEED;
    }

    @Override
    public Field<Double> field9() {
        return Troop.TROOP.CLOSE_COMBAT_RANGE;
    }

    @Override
    public Field<Double> field10() {
        return Troop.TROOP.RANGED_COMBAT_RANGE;
    }

    @Override
    public Field<Double> field11() {
        return Troop.TROOP.NORMAL_VIEW_DISTANCE;
    }

    @Override
    public Field<Double> field12() {
        return Troop.TROOP.DISADVANTAGED_VIEW_DISTANCE;
    }

    @Override
    public Field<Double> field13() {
        return Troop.TROOP.ADVANTAGED_VIEW_DISTANCE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCurrentHealth();
    }

    @Override
    public Integer component3() {
        return getMaxHealth();
    }

    @Override
    public Double component4() {
        return getPosX();
    }

    @Override
    public Double component5() {
        return getPosY();
    }

    @Override
    public Double component6() {
        return getNormalSpeed();
    }

    @Override
    public Double component7() {
        return getStreetSpeed();
    }

    @Override
    public Double component8() {
        return getDifficultTerrainSpeed();
    }

    @Override
    public Double component9() {
        return getCloseCombatRange();
    }

    @Override
    public Double component10() {
        return getRangedCombatRange();
    }

    @Override
    public Double component11() {
        return getNormalViewDistance();
    }

    @Override
    public Double component12() {
        return getDisadvantagedViewDistance();
    }

    @Override
    public Double component13() {
        return getAdvantagedViewDistance();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCurrentHealth();
    }

    @Override
    public Integer value3() {
        return getMaxHealth();
    }

    @Override
    public Double value4() {
        return getPosX();
    }

    @Override
    public Double value5() {
        return getPosY();
    }

    @Override
    public Double value6() {
        return getNormalSpeed();
    }

    @Override
    public Double value7() {
        return getStreetSpeed();
    }

    @Override
    public Double value8() {
        return getDifficultTerrainSpeed();
    }

    @Override
    public Double value9() {
        return getCloseCombatRange();
    }

    @Override
    public Double value10() {
        return getRangedCombatRange();
    }

    @Override
    public Double value11() {
        return getNormalViewDistance();
    }

    @Override
    public Double value12() {
        return getDisadvantagedViewDistance();
    }

    @Override
    public Double value13() {
        return getAdvantagedViewDistance();
    }

    @Override
    public TroopRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TroopRecord value2(Integer value) {
        setCurrentHealth(value);
        return this;
    }

    @Override
    public TroopRecord value3(Integer value) {
        setMaxHealth(value);
        return this;
    }

    @Override
    public TroopRecord value4(Double value) {
        setPosX(value);
        return this;
    }

    @Override
    public TroopRecord value5(Double value) {
        setPosY(value);
        return this;
    }

    @Override
    public TroopRecord value6(Double value) {
        setNormalSpeed(value);
        return this;
    }

    @Override
    public TroopRecord value7(Double value) {
        setStreetSpeed(value);
        return this;
    }

    @Override
    public TroopRecord value8(Double value) {
        setDifficultTerrainSpeed(value);
        return this;
    }

    @Override
    public TroopRecord value9(Double value) {
        setCloseCombatRange(value);
        return this;
    }

    @Override
    public TroopRecord value10(Double value) {
        setRangedCombatRange(value);
        return this;
    }

    @Override
    public TroopRecord value11(Double value) {
        setNormalViewDistance(value);
        return this;
    }

    @Override
    public TroopRecord value12(Double value) {
        setDisadvantagedViewDistance(value);
        return this;
    }

    @Override
    public TroopRecord value13(Double value) {
        setAdvantagedViewDistance(value);
        return this;
    }

    @Override
    public TroopRecord values(Integer value1, Integer value2, Integer value3, Double value4, Double value5, Double value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(ITroop from) {
        setId(from.getId());
        setCurrentHealth(from.getCurrentHealth());
        setMaxHealth(from.getMaxHealth());
        setPosX(from.getPosX());
        setPosY(from.getPosY());
        setNormalSpeed(from.getNormalSpeed());
        setStreetSpeed(from.getStreetSpeed());
        setDifficultTerrainSpeed(from.getDifficultTerrainSpeed());
        setCloseCombatRange(from.getCloseCombatRange());
        setRangedCombatRange(from.getRangedCombatRange());
        setNormalViewDistance(from.getNormalViewDistance());
        setDisadvantagedViewDistance(from.getDisadvantagedViewDistance());
        setAdvantagedViewDistance(from.getAdvantagedViewDistance());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TroopRecord
     */
    public TroopRecord() {
        super(Troop.TROOP);
    }

    /**
     * Create a detached, initialised TroopRecord
     */
    public TroopRecord(Integer id, Integer currentHealth, Integer maxHealth, Double posX, Double posY, Double normalSpeed, Double streetSpeed, Double difficultTerrainSpeed, Double closeCombatRange, Double rangedCombatRange, Double normalViewDistance, Double disadvantagedViewDistance, Double advantagedViewDistance) {
        super(Troop.TROOP);

        set(0, id);
        set(1, currentHealth);
        set(2, maxHealth);
        set(3, posX);
        set(4, posY);
        set(5, normalSpeed);
        set(6, streetSpeed);
        set(7, difficultTerrainSpeed);
        set(8, closeCombatRange);
        set(9, rangedCombatRange);
        set(10, normalViewDistance);
        set(11, disadvantagedViewDistance);
        set(12, advantagedViewDistance);
    }
}
