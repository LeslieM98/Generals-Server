/*
 * This file is generated by jOOQ.
 */
package me.leslie.generals.server.persistence.jooq.tables.records;


import me.leslie.generals.core.entity.interfaces.IArmy;
import me.leslie.generals.server.persistence.jooq.tables.Army;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.2"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ArmyRecord extends UpdatableRecordImpl<ArmyRecord> implements Record2<Integer, Integer>, IArmy {

    private static final long serialVersionUID = -140941055;

    /**
     * Setter for <code>ARMY.HQ</code>.
     */
    public void setHq(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ARMY.HQ</code>.
     */
    @Override
    public Integer getHq() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ARMY.TROOP</code>.
     */
    public void setTroop(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ARMY.TROOP</code>.
     */
    @Override
    public Integer getTroop() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Army.ARMY.HQ;
    }

    @Override
    public Field<Integer> field2() {
        return Army.ARMY.TROOP;
    }

    @Override
    public Integer component1() {
        return getHq();
    }

    @Override
    public Integer component2() {
        return getTroop();
    }

    @Override
    public Integer value1() {
        return getHq();
    }

    @Override
    public Integer value2() {
        return getTroop();
    }

    @Override
    public ArmyRecord value1(Integer value) {
        setHq(value);
        return this;
    }

    @Override
    public ArmyRecord value2(Integer value) {
        setTroop(value);
        return this;
    }

    @Override
    public ArmyRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IArmy from) {
        setHq(from.getHq());
        setTroop(from.getTroop());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArmyRecord
     */
    public ArmyRecord() {
        super(Army.ARMY);
    }

    /**
     * Create a detached, initialised ArmyRecord
     */
    public ArmyRecord(Integer hq, Integer troop) {
        super(Army.ARMY);

        set(0, hq);
        set(1, troop);
    }
}
